server:
  port: 8080
  error:
    include-message: always
    include-exception: false
    include-stacktrace: never
    include-binding-errors: never
  address: localhost
  servlet:
    session:
      timeout: 1m
spring:
  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 20MB
      enabled: true
  session:
    redis:
      flush-mode: on_save
      namespace: spring:session
    store-type: redis
    timeout: 100
  data:
    redis:
      repositories:
        enabled: false
      host: localhost
      port: 6379
  mail:
    host: smtp.gmail.com
    port: 587
    #    username: ${mail.username}
    #    password: ${mail.password}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
          timeout: 5000
  messages:
    basename: messages,errors,push
  datasource:

    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/SpringTest?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true&profileSQL=true&logger=Slf4JLogger&maxQuerySizeToLog=999999
    username: root
    password: 1234
  jpa:
    database: mysql
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        format_sql: true
        default_batch_fetch_size: 300
        jdbc:
          batch_size: 100
    open-in-view: false
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    devtools:
      livereload:
        enabled: true
      remote:
        restart:
          enabled: true

#openapi:
#  relaxed-binding:
#    clientId: ${openapi.clientId}
#    clientSecret: ${openapi.clientSecret}


logging:
  level: #띄어쓰기 없음
    root: info
    org.hibernate.SQL: debug #띄어쓰기 2칸
#  : ssb.%d{yyyy-MM-dd}-%i.log


file:
  dir: /Users/imhaneul/skyLife/toy/files/
#sms:
#  relaxed-binding:
#    accessKey: ${cloud.accessKey}
#    secretKey: ${cloud.secretKey}
#    serviceId: ${cloud.serviceId}
#    phone: ${cloud.phone}

